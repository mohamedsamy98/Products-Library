// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_API_Core.DbContexts;

namespace Products_Library.Migrations
{
    [DbContext(typeof(ProductCategoryContext))]
    [Migration("20221029134636_AddAnnotations")]
    partial class AddAnnotations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Web_API_Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            Name = "Clothes"
                        },
                        new
                        {
                            Id = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"),
                            Name = "Gaming"
                        },
                        new
                        {
                            Id = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"),
                            Name = "Toys"
                        },
                        new
                        {
                            Id = new Guid("5b3621c0-7b12-4e80-9c8b-3398cba7ee05"),
                            Name = "Sports"
                        });
                });

            modelBuilder.Entity("Web_API_Core.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b1c2b4d-48c7-402a-80c3-cc796ad49c6b"),
                            CategoryId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            ImgURL = "https://images.samsung.com/is/image/samsung/p6pim/eg/ua43au7000uxeg/gallery/eg-uhd-au7000-ua43au7000uxeg-422353015?$650_519_PNG$",
                            Name = "Samsung TV",
                            Price = 15000f,
                            Quantity = 500
                        },
                        new
                        {
                            Id = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            CategoryId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            ImgURL = "https://m.media-amazon.com/images/I/31mu+UgobTL._AC_SX522_.jpg",
                            Name = "Shirt",
                            Price = 300f,
                            Quantity = 500
                        },
                        new
                        {
                            Id = new Guid("d173e20d-159e-4127-9ce9-b0ac2564ad97"),
                            CategoryId = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"),
                            ImgURL = "https://www.imediastores.com/wp-content/uploads/2022/09/CD-Game-PS4-FIFA-2023-Standard-Edition-Arabic-Edition-1.jpg",
                            Name = "FIFA 23",
                            Price = 1500f,
                            Quantity = 500
                        },
                        new
                        {
                            Id = new Guid("40ff5488-fdab-45b5-bc3a-14302d59869a"),
                            CategoryId = new Guid("5b3621c0-7b12-4e80-9c8b-3398cba7ee05"),
                            ImgURL = "https://st-adidas-egy.mncdn.com/mnresize/415/415/content/images/thumbs/0157325_ucl-pro-void-ball_he3777_back-center-view.jpeg",
                            Name = "Adidas Ball",
                            Price = 2000f,
                            Quantity = 500
                        });
                });

            modelBuilder.Entity("Web_API_Core.Entities.Product", b =>
                {
                    b.HasOne("Web_API_Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
